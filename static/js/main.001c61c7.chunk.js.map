{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","cardID","initialState","id","concat","cards","listsReducer","state","arguments","length","undefined","action","newList","Object","toConsumableArray","newCard","console","log","map","list","objectSpread","_action$payload","newState","splice","apply","_list$cards","find","card","_listEnd$cards","_action$payload2","newText","newCards","combineReducers","lists","store","createStore","rootReducer","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","react_default","a","createElement","autoFocus","value","e","onBlur","onMouseDown","TrelloButton","onClick","StyledButton","Button","TrelloButton_templateObject","variant","TrelloCard","index","dispatch","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","handleChange","target","saveCard","preventDefault","editCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","TrelloList","droppableId","droppableProps","components_TrelloCard","key","components_TrelloCreate","ListsContainer","App_templateObject","App","onDragEnd","result","destination","source","direction","components_TrelloList","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.001c61c7.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addList = title => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexEnd,\r\n      droppableIndexStart,\r\n      draggableId,\r\n      type\r\n    }\r\n  };\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID }\r\n  };\r\n};\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { id, listID, newText }\r\n  };\r\n};\r\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\"\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nlet listID = 2;\r\nlet cardID = 6;\r\n\r\nconst initialState = [\r\n  {\r\n    title: \"Last Episode\",\r\n    id: `list-${0}`,\r\n    cards: [\r\n      {\r\n        id: `card-${0}`,\r\n        text: \"we created a static list and a static card\"\r\n      },\r\n      {\r\n        id: `card-${1}`,\r\n        text: \"we used a mix between material UI React and styled components\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"This Episode\",\r\n    id: `list-${1}`,\r\n    cards: [\r\n      {\r\n        id: `card-${2}`,\r\n        text: \"we will create our first reducer\"\r\n      },\r\n      {\r\n        id: `card-${3}`,\r\n        text: \"and render many cards on our list with static data\"\r\n      },\r\n      {\r\n        id: `card-${4}`,\r\n        text:\r\n          \"we will also make some little changes I forgot in the last episode (link tags for roboto font and icons,..)\"\r\n      },\r\n      {\r\n        id: `card-${5}`,\r\n        text:\r\n          \"we will also make some little changes I forgot in the last episode (link tags for roboto font and icons,..)\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: `list-${listID}`\r\n      };\r\n      listID += 1;\r\n      return [...state, newList];\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        text: action.payload.text,\r\n        id: `card-${cardID}`\r\n      };\r\n      cardID += 1;\r\n\r\n      console.log(\"action received\", action);\r\n\r\n      const newState = state.map(list => {\r\n        if (list.id === action.payload.listID) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard]\r\n          };\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n        draggableId,\r\n        type\r\n      } = action.payload;\r\n      const newState = [...state];\r\n\r\n      // draggin lists around\r\n      if (type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n      // other list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        // find the list where the drag happened\r\n        const listStart = state.find(list => droppableIdStart === list.id);\r\n        // pull out the card from this list\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        // find the list where the drag ended\r\n        const listEnd = state.find(list => droppableIdEnd === list.id);\r\n\r\n        // put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n      return newState;\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { id, listID, newText } = action.payload;\r\n      return state.map(list => {\r\n        if (list.id === listID) {\r\n          const newCards = list.cards.map(card => {\r\n            if (card.id === id) {\r\n              card.text = newText;\r\n              return card;\r\n            }\r\n            return card;\r\n          });\r\n          return { ...list, cards: newCards };\r\n        }\r\n        return list;\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listsReducer from \"./listsReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst TrelloForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    const Container = styled.div`\r\n      width: 300px;\r\n      margin-bottom: 8px;\r\n    `;\r\n\r\n    const StyledCard = styled(Card)`\r\n      min-height: 85px;\r\n      padding: 6px 8px 2px;\r\n    `;\r\n\r\n    const StyledTextArea = styled(Textarea)`\r\n      resize: none;\r\n      width: 100%;\r\n      overflow: hidden;\r\n      outline: none;\r\n      border: none;\r\n    `;\r\n\r\n    const ButtonContainer = styled.div`\r\n      margin-top: 8px;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-left: 8px;\r\n    `;\r\n\r\n    const StyledIcon = styled(Icon)`\r\n      margin-left: 8px;\r\n      cursor: pointer;\r\n    `;\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            value={text}\r\n            onChange={e => onChange(e)}\r\n            onBlur={closeForm}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrelloForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst TrelloButton = ({ children, onClick }) => {\r\n  const StyledButton = styled(Button)`\r\n    && {\r\n      color: white;\r\n      background: #5aac44;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default TrelloButton;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport { editCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloButton from \"./TrelloButton\";\r\n\r\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const CardContainer = styled.div`\r\n    margin: 0 0 8px 0;\r\n    position: relative;\r\n    max-width: 100%;\r\n    word-wrap: break-word;\r\n  `;\r\n\r\n  const EditButton = styled(Icon)`\r\n    position: absolute;\r\n    display: none;\r\n    right: 5px;\r\n    top: 5px;\r\n    opacity: 0.5;\r\n    ${CardContainer}:hover & {\r\n      display: block;\r\n      cursor: pointer;\r\n    }\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  `;\r\n\r\n  const closeForm = e => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editCard(id, listID, cardText));\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const renderEditForm = () => {\r\n    return (\r\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\r\n      </TrelloForm>\r\n    );\r\n  };\r\n\r\n  const renderCard = () => {\r\n    return (\r\n      <Draggable draggableId={String(id)} index={index}>\r\n        {provided => (\r\n          <CardContainer\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <Card>\r\n              <EditButton\r\n                onMouseDown={() => setIsEditing(true)}\r\n                fontSize=\"small\"\r\n              >\r\n                edit\r\n              </EditButton>\r\n              <CardContent>\r\n                <Typography>{text}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return isEditing ? renderEditForm() : renderCard();\r\n});\r\n\r\nexport default connect()(TrelloCard);\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TrelloOpenForm = ({ list, children, onClick }) => {\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const OpenFormButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    margin-left: 8px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <OpenFormButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <p style={{ flexShrink: 0 }}>{children}</p>\r\n    </OpenFormButton>\r\n  );\r\n};\r\n\r\nexport default TrelloOpenForm;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloButton from \"./TrelloButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport TrelloOpenForm from \"./TrelloOpenForm\";\r\n\r\nclass TrelloCreate extends React.PureComponent {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n\r\n  closeForm = e => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addList(text));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  renderOpenForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n    const OpenFormButton = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      border-radius: 3px;\r\n      height: 36px;\r\n      margin-left: 8px;\r\n      width: 300px;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      opacity: ${buttonTextOpacity};\r\n      color: ${buttonTextColor};\r\n      background-color: ${buttonTextBackground};\r\n    `;\r\n\r\n    return (\r\n      <OpenFormButton onClick={this.openForm}>\r\n        <Icon>add</Icon>\r\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\r\n      </OpenFormButton>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    const { list } = this.props;\r\n    return this.state.formOpen ? (\r\n      <TrelloForm\r\n        text={text}\r\n        onChange={this.handleInputChange}\r\n        closeForm={this.closeForm}\r\n      >\r\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\r\n          {list ? \"Add List\" : \"Add Card\"}\r\n        </TrelloButton>\r\n      </TrelloForm>\r\n    ) : (\r\n      <TrelloOpenForm list={list} onClick={this.openForm}>\r\n        {list ? \"Add another list\" : \"Add another card\"}\r\n      </TrelloOpenForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(TrelloCreate);\r\n","import React from \"react\";\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  margin: 0 8px 0 0;\r\n`;\r\n\r\nconst TrelloList = React.memo(({ title, cards, listID, index }) => {\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {provided => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {provided => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <h4>{title}</h4>\r\n\r\n                {cards.map((card, index) => (\r\n                  <TrelloCard\r\n                    key={card.id}\r\n                    text={card.text}\r\n                    id={card.id}\r\n                    index={index}\r\n                    listID={listID}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n                <TrelloCreate listID={listID} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n});\r\n\r\nexport default TrelloList;\r\n","import React, { Component, PureComponent } from \"react\";\r\nimport TrelloList from \"./TrelloList\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { sort } from \"../actions\";\r\n\r\nconst ListsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\n// TODO: Fix performance issue\r\n\r\nclass App extends PureComponent {\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists } = this.props;\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <h2>Hello Youtube</h2>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {provided => (\r\n            <ListsContainer\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {lists.map((list, index) => (\r\n                <TrelloList\r\n                  listID={list.id}\r\n                  key={list.id}\r\n                  title={list.title}\r\n                  cards={list.cards}\r\n                  index={index}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n              <TrelloCreate list />\r\n            </ListsContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    background-color: orange;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}