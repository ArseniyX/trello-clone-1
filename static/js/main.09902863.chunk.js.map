{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/listOrderReducer.js","reducers/cardsReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","cardID","initialState","listsReducer","state","arguments","length","undefined","action","newList","id","concat","cards","newState","Object","objectSpread","defineProperty","list","push","_action$payload","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload2","newCards","filter","_action$payload3","newTitle","listOrderReducer","newID","pulledOutList","card-0","cardsReducer","newCard","newText","combineReducers","lists","listOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","dispatch","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","console","log","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","TitleContainer","TrelloList_templateObject3","TrelloList_templateObject4","ListTitle","h4","TrelloList_templateObject5","listTitle","setListTitle","handleFocus","select","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloCreate","ListsContainer","App_templateObject","App","onDragEnd","result","destination","source","direction","listCards","components_TrelloList","Boolean","window","location","hostname","match","store","createStore","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09902863.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addList = title => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexEnd,\r\n      droppableIndexStart,\r\n      draggableId,\r\n      type\r\n    }\r\n  };\r\n};\r\n\r\nexport const editTitle = (listID, newTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listID,\r\n      newTitle\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteList = listID => {\r\n  return {\r\n    type: CONSTANTS.DELETE_LIST,\r\n    payload: {\r\n      listID\r\n    }\r\n  };\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID }\r\n  };\r\n};\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { id, listID, newText }\r\n  };\r\n};\r\n\r\nexport const deleteCard = (id, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { id, listID }\r\n  };\r\n};\r\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n  DELETE_LIST: \"DELETE_LIST\"\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nlet listID = 1;\r\nlet cardID = 0;\r\n\r\nconst initialState = {};\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      const newList = {\r\n        title: action.payload,\r\n        id: `list-${listID}`,\r\n        cards: []\r\n      };\r\n\r\n      const newState = { ...state, [`list-${listID}`]: newList };\r\n      listID += 1;\r\n\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      cardID += 1;\r\n      const { listID } = action.payload;\r\n      const list = state[listID];\r\n      list.cards.push(`card-${cardID}`);\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n\r\n        type\r\n      } = action.payload;\r\n\r\n      // draggin lists around - the listOrderReducer should handle this\r\n      if (type === \"list\") {\r\n        return state;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state[droppableIdStart];\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return { ...state, [droppableIdStart]: list };\r\n      }\r\n\r\n      // other list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        // find the list where the drag happened\r\n        const listStart = state[droppableIdStart];\r\n        // pull out the card from this list\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        // find the list where the drag ended\r\n        const listEnd = state[droppableIdEnd];\r\n\r\n        // put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n        return {\r\n          ...state,\r\n          [droppableIdStart]: listStart,\r\n          [droppableIdEnd]: listEnd\r\n        };\r\n      }\r\n      return state;\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { listID, id } = action.payload;\r\n\r\n      const list = state[listID];\r\n      const newCards = list.cards.filter(cardID => cardID !== id);\r\n\r\n      return { ...state, [listID]: { ...list, cards: newCards } };\r\n    }\r\n\r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listID, newTitle } = action.payload;\r\n\r\n      const list = state[listID];\r\n      list.title = newTitle;\r\n      return { ...state, [listID]: list };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID } = action.payload;\r\n      const newState = state;\r\n      delete newState[listID];\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\nlet listID = 0;\r\nconst initialState = [\"list-0\"];\r\n\r\nconst listOrderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST: {\r\n      listID += 1;\r\n      const newID = `list-${listID}`;\r\n      return [...state, newID];\r\n    }\r\n    case CONSTANTS.DRAG_HAPPENED: {\r\n      const {\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n\r\n        type\r\n      } = action.payload;\r\n      const newState = state;\r\n\r\n      // draggin lists around\r\n      if (type === \"list\") {\r\n        const pulledOutList = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...pulledOutList);\r\n        return newState;\r\n      }\r\n      return state;\r\n    }\r\n    case CONSTANTS.DELETE_LIST: {\r\n      const { listID } = action.payload;\r\n      return state.filter(id => id !== listID);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listOrderReducer;\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nlet cardID = 0;\r\n\r\nconst initialState = {\r\n  \"card-0\": {\r\n    text: \"Last Episode\",\r\n    id: `card-0`,\r\n    list: \"list-0\"\r\n  }\r\n};\r\n\r\nconst cardsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_CARD: {\r\n      const { text, listID } = action.payload;\r\n\r\n      cardID += 1;\r\n      const newCard = {\r\n        text,\r\n        id: `card-${cardID}`,\r\n        list: listID\r\n      };\r\n\r\n      return { ...state, [`card-${cardID}`]: newCard };\r\n    }\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { id, newText } = action.payload;\r\n      const card = state[id];\r\n      card.text = newText;\r\n      return { ...state, [`card-${id}`]: card };\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { id } = action.payload;\r\n      const newState = state;\r\n      delete newState[id];\r\n      return newState;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listsReducer from \"./listsReducer\";\r\nimport listOrderReducer from \"./listOrderReducer\";\r\nimport cardsReducer from \"./cardsReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer,\r\n  listOrder: listOrderReducer,\r\n  cards: cardsReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer);\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TrelloForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            value={text}\r\n            onChange={e => onChange(e)}\r\n            onBlur={closeForm}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrelloForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst TrelloButton = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default TrelloButton;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloButton from \"./TrelloButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = e => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editCard(id, listID, cardText));\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleDeleteCard = e => {\r\n    console.log(listID);\r\n    dispatch(deleteCard(id, listID));\r\n  };\r\n\r\n  const renderEditForm = () => {\r\n    return (\r\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\r\n      </TrelloForm>\r\n    );\r\n  };\r\n\r\n  const renderCard = () => {\r\n    return (\r\n      <Draggable draggableId={String(id)} index={index}>\r\n        {provided => (\r\n          <CardContainer\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <Card>\r\n              <EditButton\r\n                onMouseDown={() => setIsEditing(true)}\r\n                fontSize=\"small\"\r\n              >\r\n                edit\r\n              </EditButton>\r\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\r\n                delete\r\n              </DeleteButton>\r\n\r\n              <CardContent>\r\n                <Typography>{text}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return isEditing ? renderEditForm() : renderCard();\r\n});\r\n\r\nexport default connect()(TrelloCard);\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TrelloOpenForm = ({ list, children, onClick }) => {\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const OpenFormButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    margin-left: 8px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <OpenFormButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <p style={{ flexShrink: 0 }}>{children}</p>\r\n    </OpenFormButton>\r\n  );\r\n};\r\n\r\nexport default TrelloOpenForm;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloButton from \"./TrelloButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport TrelloOpenForm from \"./TrelloOpenForm\";\r\n\r\nclass TrelloCreate extends React.PureComponent {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n\r\n  closeForm = e => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addList(text));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  renderOpenForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n    const OpenFormButton = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      border-radius: 3px;\r\n      height: 36px;\r\n      margin-left: 8px;\r\n      width: 300px;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      opacity: ${buttonTextOpacity};\r\n      color: ${buttonTextColor};\r\n      background-color: ${buttonTextBackground};\r\n    `;\r\n\r\n    return (\r\n      <OpenFormButton onClick={this.openForm}>\r\n        <Icon>add</Icon>\r\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\r\n      </OpenFormButton>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    const { list } = this.props;\r\n    return this.state.formOpen ? (\r\n      <TrelloForm\r\n        text={text}\r\n        onChange={this.handleInputChange}\r\n        closeForm={this.closeForm}\r\n      >\r\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\r\n          {list ? \"Add List\" : \"Add Card\"}\r\n        </TrelloButton>\r\n      </TrelloForm>\r\n    ) : (\r\n      <TrelloOpenForm list={list} onClick={this.openForm}>\r\n        {list ? \"Add another list\" : \"Add another card\"}\r\n      </TrelloOpenForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(TrelloCreate);\r\n","import React, { useState } from \"react\";\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTitle, deleteList } from \"../actions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  margin: 0 8px 0 0;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <form onSubmit={handleFinishEditing}>\r\n        <StyledInput\r\n          type=\"text\"\r\n          value={listTitle}\r\n          onChange={handleChange}\r\n          autoFocus\r\n          onFocus={handleFocus}\r\n          onBlur={handleFinishEditing}\r\n        />\r\n      </form>\r\n    );\r\n  };\r\n\r\n  const handleFocus = e => {\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleFinishEditing = e => {\r\n    setIsEditing(false);\r\n    dispatch(editTitle(listID, listTitle));\r\n  };\r\n\r\n  const handleDeleteList = () => {\r\n    dispatch(deleteList(listID));\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {provided => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {provided => (\r\n              <div>\r\n                <div>\r\n                  {isEditing ? (\r\n                    renderEditInput()\r\n                  ) : (\r\n                    <TitleContainer onClick={() => setIsEditing(true)}>\r\n                      <ListTitle>{listTitle}</ListTitle>\r\n                      <DeleteButton onClick={handleDeleteList}>\r\n                        delete\r\n                      </DeleteButton>\r\n                    </TitleContainer>\r\n                  )}\r\n                </div>\r\n                <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {cards.map((card, index) => (\r\n                    <TrelloCard\r\n                      key={card.id}\r\n                      text={card.text}\r\n                      id={card.id}\r\n                      index={index}\r\n                      listID={listID}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  <TrelloCreate listID={listID} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default connect()(TrelloList);\r\n","import React, { PureComponent } from \"react\";\r\nimport TrelloList from \"./TrelloList\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { sort } from \"../actions\";\r\n\r\nconst ListsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\n// TODO: Fix performance issue\r\n\r\nclass App extends PureComponent {\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists, listOrder, cards } = this.props;\r\n\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <h2>Trello Board</h2>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {provided => (\r\n            <ListsContainer\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {listOrder.map((listID, index) => {\r\n                const list = lists[listID];\r\n                if (list) {\r\n                  const listCards = list.cards.map(cardID => cards[cardID]);\r\n\r\n                  return (\r\n                    <TrelloList\r\n                      listID={list.id}\r\n                      key={list.id}\r\n                      title={list.title}\r\n                      cards={listCards}\r\n                      index={index}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n              {provided.placeholder}\r\n              <TrelloCreate list />\r\n            </ListsContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists,\r\n  listOrder: state.listOrder,\r\n  cards: state.cards\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport Store from \"./store\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport $ from \"jquery\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst { persistor, store } = Store();\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    background-color: orange;\r\n    box-sizing: border-box;\r\n    transition: all 0.5s ease-in;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <GlobalStyle />\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n$(document).bind(\"DOMNodeRemoved\", function(e) {\r\n  console.log(\"Removed: \" + e.target.nodeName);\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}