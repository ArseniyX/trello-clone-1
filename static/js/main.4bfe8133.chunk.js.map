{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","cardID","initialState","id","concat","cards","listsReducer","state","arguments","length","undefined","action","newList","Object","toConsumableArray","newCard","console","log","map","list","objectSpread","_action$payload","newState","splice","apply","_list$cards","find","card","_listEnd$cards","_action$payload2","newText","newCards","_action$payload3","filter","_action$payload4","newListTitle","combineReducers","lists","store","createStore","rootReducer","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","react_default","a","createElement","autoFocus","value","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","dispatch","_useState","useState","_useState2","slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","target","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","fontSize","CardContent_default","Typography_default","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","style","flexShrink","TrelloCreate","formOpen","openForm","_this","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","TrelloCreate_templateObject","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","StyledInput","input","TrelloList_templateObject2","listTitle","setListTitle","handleFocus","select","handleFinishEditing","newTitle","editTitle","droppableId","droppableProps","onFocus","components_TrelloCard","key","components_TrelloCreate","ListsContainer","App_templateObject","App","onDragEnd","result","destination","source","direction","components_TrelloList","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","components_App","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4bfe8133.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addList = title => {\r\n  return {\r\n    type: CONSTANTS.ADD_LIST,\r\n    payload: title\r\n  };\r\n};\r\n\r\nexport const sort = (\r\n  droppableIdStart,\r\n  droppableIdEnd,\r\n  droppableIndexStart,\r\n  droppableIndexEnd,\r\n  draggableId,\r\n  type\r\n) => {\r\n  return {\r\n    type: CONSTANTS.DRAG_HAPPENED,\r\n    payload: {\r\n      droppableIdStart,\r\n      droppableIdEnd,\r\n      droppableIndexEnd,\r\n      droppableIndexStart,\r\n      draggableId,\r\n      type\r\n    }\r\n  };\r\n};\r\n\r\nexport const editTitle = (listID, newTitle) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_LIST_TITLE,\r\n    payload: {\r\n      listID,\r\n      newTitle\r\n    }\r\n  };\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nexport const addCard = (listID, text) => {\r\n  return {\r\n    type: CONSTANTS.ADD_CARD,\r\n    payload: { text, listID }\r\n  };\r\n};\r\n\r\nexport const editCard = (id, listID, newText) => {\r\n  return {\r\n    type: CONSTANTS.EDIT_CARD,\r\n    payload: { id, listID, newText }\r\n  };\r\n};\r\n\r\nexport const deleteCard = (id, listID) => {\r\n  return {\r\n    type: CONSTANTS.DELETE_CARD,\r\n    payload: { id, listID }\r\n  };\r\n};\r\n","export * from \"./listsActions\";\r\nexport * from \"./cardsActions\";\r\n\r\nexport const CONSTANTS = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  ADD_LIST: \"ADD_LIST\",\r\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  DELETE_CARD: \"DELETE_CARD\",\r\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\"\r\n};\r\n","import { CONSTANTS } from \"../actions\";\r\n\r\nlet listID = 2;\r\nlet cardID = 6;\r\n\r\nconst initialState = [\r\n  {\r\n    title: \"Last Episode\",\r\n    id: `list-${0}`,\r\n    cards: [\r\n      {\r\n        id: `card-${0}`,\r\n        text: \"we created a static list and a static card\"\r\n      },\r\n      {\r\n        id: `card-${1}`,\r\n        text: \"we used a mix between material UI React and styled components\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: \"This Episode\",\r\n    id: `list-${1}`,\r\n    cards: [\r\n      {\r\n        id: `card-${2}`,\r\n        text: \"we will create our first reducer\"\r\n      },\r\n      {\r\n        id: `card-${3}`,\r\n        text: \"and render many cards on our list with static data\"\r\n      },\r\n      {\r\n        id: `card-${4}`,\r\n        text:\r\n          \"we will also make some little changes I forgot in the last episode (link tags for roboto font and icons,..)\"\r\n      },\r\n      {\r\n        id: `card-${5}`,\r\n        text:\r\n          \"we will also make some little changes I forgot in the last episode (link tags for roboto font and icons,..)\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst listsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CONSTANTS.ADD_LIST:\r\n      const newList = {\r\n        title: action.payload,\r\n        cards: [],\r\n        id: `list-${listID}`\r\n      };\r\n      listID += 1;\r\n      return [...state, newList];\r\n\r\n    case CONSTANTS.ADD_CARD: {\r\n      const newCard = {\r\n        text: action.payload.text,\r\n        id: `card-${cardID}`\r\n      };\r\n      cardID += 1;\r\n\r\n      console.log(\"action received\", action);\r\n\r\n      const newState = state.map(list => {\r\n        if (list.id === action.payload.listID) {\r\n          return {\r\n            ...list,\r\n            cards: [...list.cards, newCard]\r\n          };\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n\r\n      return newState;\r\n    }\r\n\r\n    case CONSTANTS.DRAG_HAPPENED:\r\n      const {\r\n        droppableIdStart,\r\n        droppableIdEnd,\r\n        droppableIndexEnd,\r\n        droppableIndexStart,\r\n        draggableId,\r\n        type\r\n      } = action.payload;\r\n      const newState = [...state];\r\n\r\n      // draggin lists around\r\n      if (type === \"list\") {\r\n        const list = newState.splice(droppableIndexStart, 1);\r\n        newState.splice(droppableIndexEnd, 0, ...list);\r\n        return newState;\r\n      }\r\n\r\n      // in the same list\r\n      if (droppableIdStart === droppableIdEnd) {\r\n        const list = state.find(list => droppableIdStart === list.id);\r\n        const card = list.cards.splice(droppableIndexStart, 1);\r\n        list.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n      // other list\r\n      if (droppableIdStart !== droppableIdEnd) {\r\n        // find the list where the drag happened\r\n        const listStart = state.find(list => droppableIdStart === list.id);\r\n        // pull out the card from this list\r\n        const card = listStart.cards.splice(droppableIndexStart, 1);\r\n        // find the list where the drag ended\r\n        const listEnd = state.find(list => droppableIdEnd === list.id);\r\n\r\n        // put the card in the new list\r\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n      }\r\n\r\n      return newState;\r\n\r\n    case CONSTANTS.EDIT_CARD: {\r\n      const { id, listID, newText } = action.payload;\r\n      return state.map(list => {\r\n        if (list.id === listID) {\r\n          const newCards = list.cards.map(card => {\r\n            if (card.id === id) {\r\n              card.text = newText;\r\n              return card;\r\n            }\r\n            return card;\r\n          });\r\n          return { ...list, cards: newCards };\r\n        }\r\n        return list;\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.DELETE_CARD: {\r\n      const { id, listID } = action.payload;\r\n      return state.map(list => {\r\n        if (list.id === listID) {\r\n          const newCards = list.cards.filter(card => card.id !== id);\r\n          return { ...list, cards: newCards };\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n    }\r\n\r\n    case CONSTANTS.EDIT_LIST_TITLE: {\r\n      const { listID, newListTitle } = action.payload;\r\n      return state.map(list => {\r\n        if (list.id === listID) {\r\n          list.title = newListTitle;\r\n          return list;\r\n        } else {\r\n          return list;\r\n        }\r\n      });\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport listsReducer from \"./listsReducer\";\r\n\r\nexport default combineReducers({\r\n  lists: listsReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Textarea from \"react-textarea-autosize\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst Container = styled.div`\r\n  width: 284px;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 85px;\r\n  padding: 6px 8px 2px;\r\n`;\r\n\r\nconst StyledTextArea = styled(Textarea)`\r\n  resize: none;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  outline: none;\r\n  border: none;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  margin-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  margin-left: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TrelloForm = React.memo(\r\n  ({ list, text = \"\", onChange, closeForm, children }) => {\r\n    const placeholder = list\r\n      ? \"Enter list title...\"\r\n      : \"Enter a title for this card...\";\r\n\r\n    return (\r\n      <Container>\r\n        <StyledCard>\r\n          <StyledTextArea\r\n            placeholder={placeholder}\r\n            autoFocus\r\n            value={text}\r\n            onChange={e => onChange(e)}\r\n            onBlur={closeForm}\r\n          />\r\n        </StyledCard>\r\n        <ButtonContainer>\r\n          {children}\r\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\r\n        </ButtonContainer>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TrelloForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  && {\r\n    color: white;\r\n    background: #5aac44;\r\n  }\r\n`;\r\n\r\nconst TrelloButton = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default TrelloButton;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport { editCard, deleteCard } from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloButton from \"./TrelloButton\";\r\n\r\nconst CardContainer = styled.div`\r\n  margin: 0 0 8px 0;\r\n  position: relative;\r\n  max-width: 100%;\r\n  word-wrap: break-word;\r\n`;\r\n\r\nconst EditButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  top: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  position: absolute;\r\n  display: none;\r\n  right: 5px;\r\n  bottom: 5px;\r\n  opacity: 0.5;\r\n  ${CardContainer}:hover & {\r\n    display: block;\r\n    cursor: pointer;\r\n  }\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [cardText, setText] = useState(text);\r\n\r\n  const closeForm = e => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const saveCard = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editCard(id, listID, cardText));\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleDeleteCard = e => {\r\n    dispatch(deleteCard(id, listID));\r\n  };\r\n\r\n  const renderEditForm = () => {\r\n    return (\r\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\r\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\r\n      </TrelloForm>\r\n    );\r\n  };\r\n\r\n  const renderCard = () => {\r\n    return (\r\n      <Draggable draggableId={String(id)} index={index}>\r\n        {provided => (\r\n          <CardContainer\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            onDoubleClick={() => setIsEditing(true)}\r\n          >\r\n            <Card>\r\n              <EditButton\r\n                onMouseDown={() => setIsEditing(true)}\r\n                fontSize=\"small\"\r\n              >\r\n                edit\r\n              </EditButton>\r\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\r\n                delete\r\n              </DeleteButton>\r\n              <CardContent>\r\n                <Typography>{text}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardContainer>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n\r\n  return isEditing ? renderEditForm() : renderCard();\r\n});\r\n\r\nexport default connect()(TrelloCard);\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TrelloOpenForm = ({ list, children, onClick }) => {\r\n  const buttonTextOpacity = list ? 1 : 0.5;\r\n  const buttonTextColor = list ? \"white\" : \"inherit\";\r\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n  const OpenFormButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    height: 36px;\r\n    margin-left: 8px;\r\n    width: 300px;\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    opacity: ${buttonTextOpacity};\r\n    color: ${buttonTextColor};\r\n    background-color: ${buttonTextBackground};\r\n  `;\r\n\r\n  return (\r\n    <OpenFormButton onClick={onClick}>\r\n      <Icon>add</Icon>\r\n      <p style={{ flexShrink: 0 }}>{children}</p>\r\n    </OpenFormButton>\r\n  );\r\n};\r\n\r\nexport default TrelloOpenForm;\r\n","import React from \"react\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TrelloButton from \"./TrelloButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList, addCard } from \"../actions\";\r\nimport styled from \"styled-components\";\r\nimport TrelloForm from \"./TrelloForm\";\r\nimport TrelloOpenForm from \"./TrelloOpenForm\";\r\n\r\nclass TrelloCreate extends React.PureComponent {\r\n  state = {\r\n    formOpen: false,\r\n    text: \"\"\r\n  };\r\n\r\n  openForm = () => {\r\n    this.setState({\r\n      formOpen: true\r\n    });\r\n  };\r\n\r\n  closeForm = e => {\r\n    this.setState({\r\n      formOpen: false\r\n    });\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      text: e.target.value\r\n    });\r\n  };\r\n\r\n  handleAddList = () => {\r\n    const { dispatch } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addList(text));\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  handleAddCard = () => {\r\n    const { dispatch, listID } = this.props;\r\n    const { text } = this.state;\r\n\r\n    if (text) {\r\n      this.setState({\r\n        text: \"\"\r\n      });\r\n      dispatch(addCard(listID, text));\r\n    }\r\n  };\r\n\r\n  renderOpenForm = () => {\r\n    const { list } = this.props;\r\n\r\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\r\n    const buttonTextOpacity = list ? 1 : 0.5;\r\n    const buttonTextColor = list ? \"white\" : \"inherit\";\r\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\r\n\r\n    const OpenFormButton = styled.div`\r\n      display: flex;\r\n      align-items: center;\r\n      cursor: pointer;\r\n      border-radius: 3px;\r\n      height: 36px;\r\n      margin-left: 8px;\r\n      width: 300px;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      opacity: ${buttonTextOpacity};\r\n      color: ${buttonTextColor};\r\n      background-color: ${buttonTextBackground};\r\n    `;\r\n\r\n    return (\r\n      <OpenFormButton onClick={this.openForm}>\r\n        <Icon>add</Icon>\r\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\r\n      </OpenFormButton>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { text } = this.state;\r\n    const { list } = this.props;\r\n    return this.state.formOpen ? (\r\n      <TrelloForm\r\n        text={text}\r\n        onChange={this.handleInputChange}\r\n        closeForm={this.closeForm}\r\n      >\r\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\r\n          {list ? \"Add List\" : \"Add Card\"}\r\n        </TrelloButton>\r\n      </TrelloForm>\r\n    ) : (\r\n      <TrelloOpenForm list={list} onClick={this.openForm}>\r\n        {list ? \"Add another list\" : \"Add another card\"}\r\n      </TrelloOpenForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(TrelloCreate);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TrelloCard from \"./TrelloCard\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { editTitle } from \"../actions\";\r\n\r\nconst ListContainer = styled.div`\r\n  background-color: #dfe3e6;\r\n  border-radius: 3px;\r\n  width: 300px;\r\n  padding: 8px;\r\n  height: 100%;\r\n  margin: 0 8px 0 0;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [listTitle, setListTitle] = useState(title);\r\n\r\n  // FIXME: Why does it delete the input on every letter I type in?\r\n\r\n  const renderEditInput = () => {\r\n    return (\r\n      <StyledInput\r\n        type=\"text\"\r\n        value={listTitle}\r\n        onChange={handleChange}\r\n        autoFocus\r\n        onFocus={handleFocus}\r\n        onBlur={handleFinishEditing}\r\n      />\r\n    );\r\n  };\r\n\r\n  // other stuff\r\n\r\n  const handleFocus = e => {\r\n    console.log(\"hi\");\r\n\r\n    e.target.select();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    setListTitle(e.target.value);\r\n  };\r\n\r\n  const handleFinishEditing = e => {\r\n    setIsEditing(false);\r\n    dispatch(editTitle(listID, listTitle));\r\n  };\r\n\r\n  return (\r\n    <Draggable draggableId={String(listID)} index={index}>\r\n      {provided => (\r\n        <ListContainer\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <Droppable droppableId={String(listID)} type=\"card\">\r\n            {provided => (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                {isEditing ? (\r\n                  renderEditInput()\r\n                ) : (\r\n                  <h4 onClick={() => setIsEditing(true)}>{listTitle}</h4>\r\n                )}\r\n\r\n                {cards.map((card, index) => (\r\n                  <TrelloCard\r\n                    key={card.id}\r\n                    text={card.text}\r\n                    id={card.id}\r\n                    index={index}\r\n                    listID={listID}\r\n                  />\r\n                ))}\r\n                {provided.placeholder}\r\n                <TrelloCreate listID={listID} />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </ListContainer>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default connect()(TrelloList);\r\n","import React, { Component, PureComponent } from \"react\";\r\nimport TrelloList from \"./TrelloList\";\r\nimport { connect } from \"react-redux\";\r\nimport TrelloCreate from \"./TrelloCreate\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport styled from \"styled-components\";\r\nimport { sort } from \"../actions\";\r\n\r\nconst ListsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\n// TODO: Fix performance issue\r\n\r\nclass App extends PureComponent {\r\n  onDragEnd = result => {\r\n    const { destination, source, draggableId, type } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    this.props.dispatch(\r\n      sort(\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        draggableId,\r\n        type\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { lists } = this.props;\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <h2>Hello Youtube</h2>\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n          {provided => (\r\n            <ListsContainer\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {lists.map((list, index) => (\r\n                <TrelloList\r\n                  listID={list.id}\r\n                  key={list.id}\r\n                  title={list.title}\r\n                  cards={list.cards}\r\n                  index={index}\r\n                />\r\n              ))}\r\n              {provided.placeholder}\r\n              <TrelloCreate list />\r\n            </ListsContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport $ from \"jquery\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    background-color: orange;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n$(document).bind(\"DOMNodeRemoved\", function(e) {\r\n  console.log(\"Removed: \" + e.target.nodeName);\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}